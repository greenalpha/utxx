#-------------------------------------------------------------------------------
# Colorization support
#-------------------------------------------------------------------------------
if(NOT WIN32)
    string(ASCII  27  Esc)
    string(CONCAT Esc ${Esc} "[")  # So that vim highlighting doesn't get screwed
    set(Red         "${Esc}0;31m")
    set(Green       "${Esc}0;32m")
    set(Yellow      "${Esc}0;33m")
    set(Blue        "${Esc}0;34m")
    set(Magenta     "${Esc}0;35m")
    set(Cyan        "${Esc}0;36m")
    set(White       "${Esc}0;37m")
    set(BoldRed     "${Esc}1;31m")
    set(BoldGreen   "${Esc}1;32m")
    set(BoldYellow  "${Esc}1;33m")
    set(BoldBlue    "${Esc}1;34m")
    set(BoldMagenta "${Esc}1;35m")
    set(BoldCyan    "${Esc}1;36m")
    set(BoldWhite   "${Esc}1;37m")
    set(ClrBold     "${Esc}1m")
    set(ClrReset    "${Esc}m")
endif()

#-------------------------------------------------------------------------------
# File downloading function
#-------------------------------------------------------------------------------
function(download filename url)
    if (NOT EXISTS ${filename})
        file(DOWNLOAD ${url} ${filename}
            STATUS status LOG log )
        list(GET status 0 status_code)
        list(GET status 1 status_string)

        if(NOT status_code EQUAL 0)
            file(APPEND ${CMAKE_BINARY_DIR}/CMakeFiles/CMakeOutput.log
                "Failed to download ${url}\n"
                " Reason: ${status_string}\n\n"
                "${log}"
            )
            message(FATAL_ERROR
                "${Red}Failed to download ${url}${ClrReset}"
                " Reason: ${status_string}"
            )
        else()
            message(STATUS "${ClrBold}Downloaded ${url}${ClrReset}")
            message(STATUS "${ClrBold}        -> ${filename}${ClrReset}")
        endif()
    endif()
endfunction(download)

#-------------------------------------------------------------------------------
# prefix and suffix each element of list by ${prefix}elemnt${suffix}
#-------------------------------------------------------------------------------
macro(PREFIX list_name prefix)
    # create empty list - necessary?
    set(${list_name}_TMP)

    # prefix and suffix (optional 3rd parameter) elements
	foreach(l ${${list_name}})
      list(APPEND ${list_name}_TMP ${prefix}${l}${ARGV3} )
    endforeach()

    # replace list by tmp list
	set(${list_name} "${${list_name}_TMP}")
    unset(${list_name}_TMP)
endmacro(PREFIX)


